@model E_shop.Models.Bruger
@{
    //Koden herunder redirecter en fra profil siden til login siden hvis ikke man er logget ind. UserID er da lig med null hvis ikke man er logget ind.
    if (Session["UserID"] == null)
    {
        Response.Redirect("/Home/Login");
    }
}
<!DOCTYPE html>
<html>

<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="~/Content/Login-pop-up-vindue.css" rel="stylesheet" />
</head>
<body class="font">
    @using (Html.BeginForm())
    {
    <div class="form-horizontal">
        
            <br />
            <h1 style="display: inline">Min profil</h1>
            <label style="display: inline" class="text-danger">@Html.DisplayFor(model => model.LoginErrorMessage)</label>
        
        <hr />
        <h3>Dine personoplsyninger</h3>
        <p>Herunder kan du se dine personoplysninger du gav, da du oprettede dig som bruger hos LightningTech.</p>
        <p>For at ændre i dine personoplysniger skal alle felter være angivet, også selvom den nye oplsyning er identisk med den tidligere.</p>
        <p>Du kan lave om i alle oplysninger undtagen din Email og adgangskode.</p>
        <p>Din Email og adgangskode skal stadig skrives ind sammen med alle de andre nye oplsyninger, men som valideringsoplsyninger.</p>
        <br />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <p class="col-md-2 control-label"><b>Fornavn</b></p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ForNavn, new { htmlAttributes = new { @class = "form-control", placeholder = @Session["ForNavn"].ToString() } })
            </div>
        </div>

        <div class="form-group">
            <p class="col-md-2 control-label"><b>Efternavn</b></p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.EfterNavn, new { htmlAttributes = new { @class = "form-control", placeholder = @Session["EfterNavn"].ToString() } })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Adresse, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Adresse, new { htmlAttributes = new { @class = "form-control", placeholder = @Session["Adresse"].ToString() } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Postnr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Postnr, new { htmlAttributes = new { @class = "form-control", placeholder = @Session["Postnr"].ToString() } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.By, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.By, new { htmlAttributes = new { @class = "form-control", placeholder = @Session["By"].ToString() } })
            </div>
        </div>

        <div class="form-group">
            <p class="col-md-2 control-label"><b>Telefonnummer</b></p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Telefon, new { htmlAttributes = new { @class = "form-control", placeholder = @Session["Telefon"].ToString() } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Land, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Land, new { htmlAttributes = new { @class = "form-control", placeholder = @Session["Land"].ToString() } })
            </div>
        </div>

        <hr />
        <h3>Valideringsoplsyninger</h3>
        <p>For at kunne opdatere dine personoplysninger skal du indskrive din Email og adgangskode som validering for at det er dig.</p>
        <p>Derefter skal du trykke på knappen "Opdater Oplysninger".</p>
        <br />
        <div class="form-group">
            <p class="col-md-2 control-label"><b>Email</b></p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mail, new { htmlAttributes = new { @class = "form-control", placeholder = @Session["Mail"].ToString() } })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Adgangskode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Adgangskode, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input class="btnRød" type="submit" value="Opdater Oplysninger" />
            </div>
        </div>

    </div>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

    <hr />
    <h2>Log ud</h2>
    <p>Hvis du vil logge ud skal du blot trykke på knappen "LOG UD". Den vil føre dig tilbage til Login siden.</p>
    <p>Gå tilbage til forsiden ved at trykke på knappen "FORSIDE".</p>
    <div class="modal-dialog">
        <div class="modal-content" style="box-shadow: none; width: 50%; position: relative; right: 385px; bottom: 70px;">
            <div class="modal-body">
                <div style="margin-bottom: 15px;">
                    <a href="@Url.Action("Index", "Shopping")" class="btn">Forside</a><br />
                </div>
                <div>
                    <a href="@Url.Action("LogOut", "Home")" class="btn">Log Ud</a>
                </div>
            </div>
        </div>
    </div>

</body>
</html>